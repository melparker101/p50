library(Seurat)
library(SeuratDisk)
library(ggplot2)
library(dplyr)
library(pals)
library(Matrix)

# Dataset accession
dataset <- "GSE213216"

# Input files
seurat_in <- paste0("counts/",dataset,"/_aux.seurat.shared.rds")

# Load in Seurat object
seurat_ob <- readRDS(file = seurat_in)
seurat_ob


counts <- GetAssayData(seurat_ob)
raw <- GetAssayData(object = seurat_ob, slot = "counts")


###



# Get the sparse dataframe from the Seurat object
sparse_df <- as(GetAssayData(seurat_ob), "dgCMatrix")

# Convert the sparse dataframe to a regular dataframe
df <- as.data.frame(sparse_df)

# Create a boxplot of the values
ggplot(df, aes(x = 1, y = values)) +
  geom_boxplot() +
  labs(x = "", y = "Counts")

###
library(Matrix)

# Get the sparse counts matrix from the Seurat object
sparse_counts <- as(GetAssayData(seurat_ob), "dgCMatrix")

# Convert the sparse matrix to a regular matrix
dense_counts <- as.matrix(sparse_counts)

# Create a boxplot of the counts
boxplot(dense_counts, main = "Raw RNA Counts")

###
# Get the sparse counts matrix from the Seurat object
sparse_counts <- as(GetAssayData(seurat_ob), "dgCMatrix")

# Create a boxplot of the counts
boxplot(sparse_counts, main = "Raw RNA Counts")

non_zero_counts <- sparse_counts@x

# Create a boxplot of the non-zero counts
boxplot(non_zero_counts, main = "Raw RNA Counts")


boxplot(raw, main = "Raw RNA counts")
boxplot(sparse_df, main = "Normalised RNA counts")

##############################
counts <- GetAssayData(seurat_ob)
counts <- as.data.frame(counts[,1:10])
raw <- GetAssayData(object = seurat_ob, slot = "counts")
raw <- as.data.frame(raw[,1:10])
##########
par(mfrow=c(1,2)) # to plot the two box plots next to each other
## bp of non-normalized
boxplot(log2(raw +1), notch=TRUE,
main = "Non-normalized read counts",
ylab="log2(read counts)", cex = .6)
## bp of size-factor normalized values
boxplot(log2(counts +1), notch=TRUE,
main = "Size-factor-normalized read counts",
ylab="log2(read counts)", cex = .6)

geom_boxplot(outlier.colour="black", outlier.shape=16,
             outlier.size=2, notch=FALSE)
p <- ggplot(raw, aes(x=read counts, y=len)) + 
  geom_boxplot()
p

# Add rownames as first column
raw <- cbind(rownames(raw), data.frame(raw, row.names=NULL)); colnames(raw)[1] <- "Gene"

# wide to long: https://www.biostars.org/p/469559/
melt.dat <-data.frame(reshape::melt(raw, id.vars = "Gene"))

# Change colnames
colnames(melt.dat)[2] <- "Cell"

ggplot(melt.dat, aes(x = as.factor(Cell), y = value) + 
geom_boxplot(aes(fill = supp), position = position_dodge(0.9)) +
scale_fill_manual(values = c("#09E359", "#E31009")) + 
theme_bw()

ggplot(melt.dat, aes(x=Cell, y=value)) + 
  geom_boxplot()
  
melt.dat <- melt.dat %>% mutate(log2counts = log(value + 1) )

######### Repeat for normalised

counts <- cbind(rownames(counts), data.frame(counts, row.names=NULL)); colnames(counts)[1] <- "Gene"

# wide to long: https://www.biostars.org/p/469559/
melt.dat2 <-data.frame(reshape::melt(counts, id.vars = "Gene"))

# Change colnames
colnames(melt.dat2)[2]<- "Cell"

melt.dat2 <- melt.dat2 %>% mutate(log2counts = log(value + 1) )

ggplot(melt.dat2, aes(x=Cell, y=value)) + 
  geom_boxplot()
  

  

