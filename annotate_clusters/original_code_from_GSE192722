# Code from https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE192722
Sys.setenv('R_MAX_VSIZE'=100000000000)
library(gplots)
library(cluster)
library(factoextra)
library(tidyverse)
library(plyr)
library(dplyr)
library(Seurat)
library(ggpubr)
library(Matrix)
library(cowplot)
library(mclust)
library(RColorBrewer)
library(gam)
library(devtools)
library(ggrepel)
library(leidenbase)
library(jsonlite)
library(slingshot)
library(tidymodels)
library(scales)
library(viridis)
setwd("/Users/Daylon/Desktop/Endocrine_Lab/FertPres/Nicole/ThecascRNASeqfiles/")

rm(list = ls())

#Import and process 10X Chromium Libraries
Don1 <- Read10X(data.dir = "/Users/Daylon/Desktop/Endocrine_Lab/FertPres/Nicole/Manuscript/Revision/Matrices/filtered_feature_bc_matrix_Don1")
Don1 <- CreateSeuratObject(counts = Don1, project = "Don1", min.cells = 3, min.features = 200)
samples <- read.csv("/Users/Daylon/Desktop/Endocrine_Lab/FertPres/Nicole/Manuscript/Revision/Matrices/aggregationDon1.csv", stringsAsFactors=F)
cellcodes <- as.data.frame(Don1@assays$RNA@counts@Dimnames[[2]])
colnames(cellcodes) <- "barcodes"
rownames(cellcodes) <- cellcodes$barcodes
cellcodes$libcodes <- as.factor(gsub(pattern=".+-", replacement="", cellcodes$barcodes))
cellcodes$samples <- as.vector(samples$library_id[cellcodes$libcodes])
sample.data<-read.csv("/Users/Daylon/Desktop/Endocrine_Lab/FertPres/Nicole/Manuscript/Revision/Matrices/correctsample.summaryDon1.csv",header = TRUE)
cellcodes$new.labels <- as.vector(sample.data$correct.label[cellcodes$libcodes])
cellcodes$source <- as.vector(sample.data$correct.follicle[cellcodes$libcodes])
cellcodes$patient <- as.vector(sample.data$correct.patient[cellcodes$libcodes])
Don1 <- AddMetaData(object = Don1, metadata = cellcodes$samples, col.name = "orig.ident")
Don1 <- AddMetaData(object = Don1, metadata = cellcodes$new.labels, col.name = "labels")
Don1 <- AddMetaData(object = Don1, metadata = cellcodes$source, col.name = "source")
Don1 <- AddMetaData(object = Don1, metadata = cellcodes$patient, col.name = "patient")

Don2 <- Read10X(data.dir = "/Users/Daylon/Desktop/Endocrine_Lab/FertPres/Nicole/Manuscript/Revision/Matrices/filtered_feature_bc_matrix_Don2")
Don2 <- CreateSeuratObject(counts = Don2, project = "Don2", min.cells = 3, min.features = 200)
  samples <- read.csv("/Users/Daylon/Desktop/Endocrine_Lab/FertPres/Nicole/Manuscript/Revision/Matrices/aggregationDon2.csv", stringsAsFactors=F)
cellcodes <- as.data.frame(Don2@assays$RNA@counts@Dimnames[[2]])
colnames(cellcodes) <- "barcodes"
rownames(cellcodes) <- cellcodes$barcodes
cellcodes$libcodes <- as.factor(gsub(pattern=".+-", replacement="", cellcodes$barcodes))
cellcodes$samples <- as.vector(samples$library_id[cellcodes$libcodes])
sample.data<-read.csv("/Users/Daylon/Desktop/Endocrine_Lab/FertPres/Nicole/Manuscript/Revision/Matrices/correctsample.summaryDon2.csv",header = TRUE)
cellcodes$new.labels <- as.vector(sample.data$correct.label[cellcodes$libcodes])
cellcodes$source <- as.vector(sample.data$correct.follicle[cellcodes$libcodes])
cellcodes$patient <- as.vector(sample.data$correct.patient[cellcodes$libcodes])
Don2 <- AddMetaData(object = Don2, metadata = cellcodes$samples, col.name = "orig.ident")
Don2 <- AddMetaData(object = Don2, metadata = cellcodes$new.labels, col.name = "labels")
Don2 <- AddMetaData(object = Don2, metadata = cellcodes$source, col.name = "source")
Don2 <- AddMetaData(object = Don2, metadata = cellcodes$patient, col.name = "patient")

Don3 <- Read10X(data.dir = "/Users/Daylon/Desktop/Endocrine_Lab/FertPres/Nicole/Manuscript/Revision/Matrices/filtered_feature_bc_matrix_Don3")
Don3 <- CreateSeuratObject(counts = Don3, project = "Don3", min.cells = 3, min.features = 200)
samples <- read.csv("/Users/Daylon/Desktop/Endocrine_Lab/FertPres/Nicole/Manuscript/Revision/Matrices/aggregationDon3.csv", stringsAsFactors=F)
cellcodes <- as.data.frame(Don3@assays$RNA@counts@Dimnames[[2]])
colnames(cellcodes) <- "barcodes"
rownames(cellcodes) <- cellcodes$barcodes
cellcodes$libcodes <- as.factor(gsub(pattern=".+-", replacement="", cellcodes$barcodes))
cellcodes$samples <- as.vector(samples$library_id[cellcodes$libcodes])
sample.data<-read.csv("/Users/Daylon/Desktop/Endocrine_Lab/FertPres/Nicole/Manuscript/Revision/Matrices/correctsample.summaryDon3.csv",header = TRUE)
cellcodes$new.labels <- as.vector(sample.data$correct.label[cellcodes$libcodes])
cellcodes$source <- as.vector(sample.data$correct.follicle[cellcodes$libcodes])
cellcodes$patient <- as.vector(sample.data$correct.patient[cellcodes$libcodes])
Don3 <- AddMetaData(object = Don3, metadata = cellcodes$samples, col.name = "orig.ident")
Don3 <- AddMetaData(object = Don3, metadata = cellcodes$new.labels, col.name = "labels")
Don3 <- AddMetaData(object = Don3, metadata = cellcodes$source, col.name = "source")
Don3 <- AddMetaData(object = Don3, metadata = cellcodes$patient, col.name = "patient")

Don4 <- Read10X(data.dir = "/Users/Daylon/Desktop/Endocrine_Lab/FertPres/Nicole/Manuscript/Revision/Matrices/filtered_feature_bc_matrix_Don4")
Don4 <- CreateSeuratObject(counts = Don4, project = "Don4", min.cells = 3, min.features = 200)
samples <- read.csv("/Users/Daylon/Desktop/Endocrine_Lab/FertPres/Nicole/Manuscript/Revision/Matrices/aggregationDon4.csv", stringsAsFactors=F)
cellcodes <- as.data.frame(Don4@assays$RNA@counts@Dimnames[[2]])
colnames(cellcodes) <- "barcodes"
rownames(cellcodes) <- cellcodes$barcodes
cellcodes$libcodes <- as.factor(gsub(pattern=".+-", replacement="", cellcodes$barcodes))
cellcodes$samples <- as.vector(samples$library_id[cellcodes$libcodes])
sample.data<-read.csv("/Users/Daylon/Desktop/Endocrine_Lab/FertPres/Nicole/Manuscript/Revision/Matrices/correctsample.summaryDon4.csv",header = TRUE)
cellcodes$new.labels <- as.vector(sample.data$correct.label[cellcodes$libcodes])
cellcodes$source <- as.vector(sample.data$correct.follicle[cellcodes$libcodes])
cellcodes$patient <- as.vector(sample.data$correct.patient[cellcodes$libcodes])
Don4 <- AddMetaData(object = Don4, metadata = cellcodes$samples, col.name = "orig.ident")
Don4 <- AddMetaData(object = Don4, metadata = cellcodes$new.labels, col.name = "labels")
Don4 <- AddMetaData(object = Don4, metadata = cellcodes$source, col.name = "source")
Don4 <- AddMetaData(object = Don4, metadata = cellcodes$patient, col.name = "patient")

Don5 <- Read10X(data.dir = "/Users/Daylon/Desktop/Endocrine_Lab/FertPres/Nicole/Manuscript/Revision/Matrices/filtered_feature_bc_matrix_Don5")
Don5 <- CreateSeuratObject(counts = Don5, project = "Don5", min.cells = 3, min.features = 200)
samples <- read.csv("/Users/Daylon/Desktop/Endocrine_Lab/FertPres/Nicole/Manuscript/Revision/Matrices/aggregationDon5.csv", stringsAsFactors=F)
cellcodes <- as.data.frame(Don5@assays$RNA@counts@Dimnames[[2]])
colnames(cellcodes) <- "barcodes"
rownames(cellcodes) <- cellcodes$barcodes
cellcodes$libcodes <- as.factor(gsub(pattern=".+-", replacement="", cellcodes$barcodes))
cellcodes$samples <- as.vector(samples$library_id[cellcodes$libcodes])
sample.data<-read.csv("/Users/Daylon/Desktop/Endocrine_Lab/FertPres/Nicole/Manuscript/Revision/Matrices/correctsample.summaryDon5.csv",header = TRUE)
cellcodes$new.labels <- as.vector(sample.data$correct.label[cellcodes$libcodes])
cellcodes$source <- as.vector(sample.data$correct.follicle[cellcodes$libcodes])
cellcodes$patient <- as.vector(sample.data$correct.patient[cellcodes$libcodes])
Don5 <- AddMetaData(object = Don5, metadata = cellcodes$samples, col.name = "orig.ident")
Don5 <- AddMetaData(object = Don5, metadata = cellcodes$new.labels, col.name = "labels")
Don5 <- AddMetaData(object = Don5, metadata = cellcodes$source, col.name = "source")
Don5 <- AddMetaData(object = Don5, metadata = cellcodes$patient, col.name = "patient")

Don6_11 <- Read10X(data.dir = "/Users/Daylon/Desktop/Endocrine_Lab/FertPres/Nicole/Manuscript/Revision/Matrices/filtered_feature_bc_matrix_Don6_11")
Don6_11 <- CreateSeuratObject(counts = Don6_11, project = "Don6_11", min.cells = 3, min.features = 200)
samples <- read.csv("/Users/Daylon/Desktop/Endocrine_Lab/FertPres/Nicole/Manuscript/Revision/Matrices/aggregationDon6_11.csv", stringsAsFactors=F)
cellcodes <- as.data.frame(Don6_11@assays$RNA@counts@Dimnames[[2]])
colnames(cellcodes) <- "barcodes"
rownames(cellcodes) <- cellcodes$barcodes
cellcodes$libcodes <- as.factor(gsub(pattern=".+-", replacement="", cellcodes$barcodes))
cellcodes$samples <- as.vector(samples$library_id[cellcodes$libcodes])
sample.data<-read.csv("/Users/Daylon/Desktop/Endocrine_Lab/FertPres/Nicole/Manuscript/Revision/Matrices/correctsample.summaryDon6_11.csv",header = TRUE)
cellcodes$new.labels <- as.vector(sample.data$correct.label[cellcodes$libcodes])
cellcodes$source <- as.vector(sample.data$correct.follicle[cellcodes$libcodes])
cellcodes$patient <- as.vector(sample.data$correct.patient[cellcodes$libcodes])
Don6_11 <- AddMetaData(object = Don6_11, metadata = cellcodes$samples, col.name = "orig.ident")
Don6_11 <- AddMetaData(object = Don6_11, metadata = cellcodes$new.labels, col.name = "labels")
Don6_11 <- AddMetaData(object = Don6_11, metadata = cellcodes$source, col.name = "source")
Don6_11 <- AddMetaData(object = Don6_11, metadata = cellcodes$patient, col.name = "patient")

Pt1 <- Read10X(data.dir = "/Users/Daylon/Desktop/Endocrine_Lab/FertPres/Nicole/Manuscript/Revision/Matrices/filtered_feature_bc_matrix_Pt1")
Pt1 <- CreateSeuratObject(counts = Pt1, project = "Pt1", min.cells = 3, min.features = 200)
samples <- read.csv("/Users/Daylon/Desktop/Endocrine_Lab/FertPres/Nicole/Manuscript/Revision/Matrices/aggregationPt1.csv", stringsAsFactors=F)
cellcodes <- as.data.frame(Pt1@assays$RNA@counts@Dimnames[[2]])
colnames(cellcodes) <- "barcodes"
rownames(cellcodes) <- cellcodes$barcodes
cellcodes$libcodes <- as.factor(gsub(pattern=".+-", replacement="", cellcodes$barcodes))
cellcodes$samples <- as.vector(samples$library_id[cellcodes$libcodes])
sample.data<-read.csv("/Users/Daylon/Desktop/Endocrine_Lab/FertPres/Nicole/Manuscript/Revision/Matrices/correctsample.summaryPt1.csv",header = TRUE)
cellcodes$new.labels <- as.vector(sample.data$correct.label[cellcodes$libcodes])
cellcodes$source <- as.vector(sample.data$correct.follicle[cellcodes$libcodes])
cellcodes$patient <- as.vector(sample.data$correct.patient[cellcodes$libcodes])
Pt1 <- AddMetaData(object = Pt1, metadata = cellcodes$samples, col.name = "orig.ident")
Pt1 <- AddMetaData(object = Pt1, metadata = cellcodes$new.labels, col.name = "labels")
Pt1 <- AddMetaData(object = Pt1, metadata = cellcodes$source, col.name = "source")
Pt1 <- AddMetaData(object = Pt1, metadata = cellcodes$patient, col.name = "patient")

Pt2 <- Read10X(data.dir = "/Users/Daylon/Desktop/Endocrine_Lab/FertPres/Nicole/Manuscript/Revision/Matrices/filtered_feature_bc_matrix_Pt2")
Pt2 <- CreateSeuratObject(counts = Pt2, project = "Pt2", min.cells = 3, min.features = 200)
samples <- read.csv("/Users/Daylon/Desktop/Endocrine_Lab/FertPres/Nicole/Manuscript/Revision/Matrices/aggregationPt2.csv", stringsAsFactors=F)
cellcodes <- as.data.frame(Pt2@assays$RNA@counts@Dimnames[[2]])
colnames(cellcodes) <- "barcodes"
rownames(cellcodes) <- cellcodes$barcodes
cellcodes$libcodes <- as.factor(gsub(pattern=".+-", replacement="", cellcodes$barcodes))
cellcodes$samples <- as.vector(samples$library_id[cellcodes$libcodes])
sample.data<-read.csv("/Users/Daylon/Desktop/Endocrine_Lab/FertPres/Nicole/Manuscript/Revision/Matrices/correctsample.summaryPt2.csv",header = TRUE)
cellcodes$new.labels <- as.vector(sample.data$correct.label[cellcodes$libcodes])
cellcodes$source <- as.vector(sample.data$correct.follicle[cellcodes$libcodes])
cellcodes$patient <- as.vector(sample.data$correct.patient[cellcodes$libcodes])
Pt2 <- AddMetaData(object = Pt2, metadata = cellcodes$samples, col.name = "orig.ident")
Pt2 <- AddMetaData(object = Pt2, metadata = cellcodes$new.labels, col.name = "labels")
Pt2 <- AddMetaData(object = Pt2, metadata = cellcodes$source, col.name = "source")
Pt2 <- AddMetaData(object = Pt2, metadata = cellcodes$patient, col.name = "patient")

Theca <- merge(Pt2, y = c(Don1, Don2, Don3, Don4, Don5, Don6_11, Pt1),
               add.cell.ids = c("Pt2", "Don1", "Don2", "Don3", "Don4", "Don5", "Don6_11", "Pt1"), project = "Theca")

rm(Don1, Don2, Don3, Don4, Don5, Pt2, Don6_11, Pt1)
rm(cellcodes, sample.data, samples)
#QC and subset the aggregate dataset
mito.genes <- grep(pattern = "^MT-", x = rownames(x = Theca), value = TRUE)
percent.mito <- Matrix::colSums(Theca[mito.genes, ]) / Matrix::colSums(Theca)
ribo.genes <- grep(pattern = "^RP[SL]", x = rownames(x = Theca), value = TRUE)
percent.ribo <- Matrix::colSums(Theca[ribo.genes, ]) / Matrix::colSums(Theca)
Theca <- AddMetaData(object = Theca,metadata = percent.mito,col.name = "percent.mito")
Theca <- AddMetaData(object = Theca,metadata = percent.ribo,col.name = "percent.ribo")
VlnPlot(Theca, features = c("nFeature_RNA", "nCount_RNA", "percent.mito", "percent.ribo"), pt.size = 0, ncol = 4)
table(Theca@meta.data$percent.mito < 0.20 & Theca@meta.data$nFeature_RNA > 200 & Theca@meta.data$nFeature_RNA < 7500)
QC.Theca <- WhichCells(Theca, expression = percent.mito < 0.2 & nFeature_RNA > 200 & nFeature_RNA < 7500)
Theca <- subset(Theca, cells = QC.Theca)
VlnPlot(Theca, features = c("nFeature_RNA", "nCount_RNA", "percent.mito", "percent.ribo"), pt.size = 0, ncol = 4)

Idents(Theca) <- "labels"
Don1_5 <- WhichCells(Theca, idents = c("Don1", "Don2", "Don3", "Don4", "Don5"))
Pt2 <- WhichCells(Theca, idents = c("Pt2"))
Don6_11 <- WhichCells(Theca, idents = c("Don6_11", "Pt1"))
Theca <- SetIdent(Theca, Don1_5, "Don1_5")
Theca <- SetIdent(Theca, Pt2, "Pt2")
Theca <- SetIdent(Theca, Don6_11, "Don6_11")
Theca@meta.data$batch <- Theca@active.ident
Idents(Theca) <- "batch"

# split the dataset into a list of two seurat objects ()
Theca.list <- SplitObject(Theca, split.by = "batch")

# normalize and identify variable features for each dataset independently
Theca.list <- lapply(X = Theca.list, FUN = function(x) {
  x <- NormalizeData(x)
  x <- FindVariableFeatures(x, selection.method = "vst", nfeatures = 2000)
})

# select features that are repeatedly variable across datasets for integration
features <- SelectIntegrationFeatures(object.list = Theca.list)
Theca.list <- lapply(X = Theca.list, FUN = function(x) {
  x <- ScaleData(x, features = features, verbose = FALSE)
  x <- RunPCA(x, features = features, verbose = FALSE)
})
Theca.anchors <- FindIntegrationAnchors(object.list = Theca.list, anchor.features = 2000, reduction = "rpca", dims = 1:50)
Theca <- IntegrateData(anchorset = Theca.anchors, dims = 1:50)
Theca <- ScaleData(Theca, verbose = FALSE)

#Plot According to Cell Cycle
Theca <- CellCycleScoring(Theca, g2m.features = cc.genes$g2m.genes, s.features = cc.genes$s.genes)
#Regress Cell Cycle Effects (if desired)
Theca <- ScaleData(Theca, vars.to.regress = c("S.Score", "G2M.Score"), features = rownames(Theca))

Theca <- RunPCA(object = Theca)
Theca <- FindNeighbors(object = Theca)
Theca <- FindClusters(object = Theca)
Theca <- RunUMAP(Theca, dims = 1:50)

DimPlot(Theca, reduction = "umap", group.by = "labels", pt.size = .05, label = TRUE)
DimPlot(Theca, reduction = "umap", group.by = "labels", pt.size = .05, label = TRUE)+ NoLegend()
DimPlot(Theca, reduction = "umap", group.by = "seurat_clusters", pt.size = .05, label = TRUE)+ NoLegend()
DimPlot(Theca, reduction = "umap", group.by = "Phase", pt.size = .05, label = TRUE)+ NoLegend()

FeaturePlot(object = Theca, features = "PTPRC", reduction = "umap",cols = c("grey90","red"),order = TRUE,pt.size = 0.25)
FeaturePlot(object = Theca, features = "CDH5", reduction = "umap",cols = c("white","red"),order = TRUE,pt.size = 0.25)
FeaturePlot(object = Theca, features = "RGS5", reduction = "umap",cols = c("grey90","red"),order = TRUE,pt.size = 0.25)
FeaturePlot(object = Theca, features = "AMH", reduction = "umap",cols = c("grey90","red"),order = TRUE,pt.size = 0.25)
FeaturePlot(object = Theca, features = "CYP17A1", reduction = "umap",cols = c("grey90","red"),order = TRUE,pt.size = 0.25)
FeaturePlot(object = Theca, features = "OGN", reduction = "umap",cols = c("grey90","red"),order = TRUE,pt.size = 0.25)
FeaturePlot(object = Theca, features = "ACTA2", reduction = "umap",cols = c("grey90","red"),order = TRUE,pt.size = 0.25)
FeaturePlot(object = Theca, features = "KRT8", reduction = "umap",cols = c("grey90","red"),order = TRUE,pt.size = 0.25)
FeaturePlot(object = Theca, features = "MCAM", reduction = "umap",cols = c("grey90","red"),order = TRUE,pt.size = 0.25)

VlnPlot(object = ThecaProp, features = "TCF21", pt.size = 0, group.by = "seurat_clusters") +
  stat_summary(fun = median, geom='point', size = 25, colour = "black", shape = 95)+NoLegend()

#Histogram of library contribution to each cluster
Idents(Theca) <- "seurat_clusters"
Clus0 <- subset(Theca, idents = c("0"))
Clus1 <- subset(Theca, idents = c("1"))
Clus2 <- subset(Theca, idents = c("2"))
Clus3 <- subset(Theca, idents = c("3"))
Clus4 <- subset(Theca, idents = c("4"))
Clus5 <- subset(Theca, idents = c("5"))
Clus6 <- subset(Theca, idents = c("6"))
Clus7 <- subset(Theca, idents = c("7"))
Clus8 <- subset(Theca, idents = c("8"))
Clus9 <- subset(Theca, idents = c("9"))
Clus10 <- subset(Theca, idents = c("10"))
Clus11 <- subset(Theca, idents = c("11"))
Clus12 <- subset(Theca, idents = c("12"))
Clus13 <- subset(Theca, idents = c("13"))
Clus14 <- subset(Theca, idents = c("14"))
Clus15 <- subset(Theca, idents = c("15"))
Clus16 <- subset(Theca, idents = c("16"))
Clus17 <- subset(Theca, idents = c("17"))
Clus18 <- subset(Theca, idents = c("18"))
Clus19 <- subset(Theca, idents = c("19"))
Clus20 <- subset(Theca, idents = c("20"))
Clus21 <- subset(Theca, idents = c("21"))
table(Clus0@meta.data$labels)
table(Clus1@meta.data$labels)
table(Clus2@meta.data$labels)
table(Clus3@meta.data$labels)
table(Clus4@meta.data$labels)
table(Clus5@meta.data$labels)
table(Clus6@meta.data$labels)
table(Clus7@meta.data$labels)
table(Clus8@meta.data$labels)
table(Clus9@meta.data$labels)
table(Clus10@meta.data$labels)
table(Clus11@meta.data$labels)
table(Clus12@meta.data$labels)
table(Clus13@meta.data$labels)
table(Clus14@meta.data$labels)
table(Clus15@meta.data$labels)
table(Clus16@meta.data$labels)
table(Clus17@meta.data$labels)
table(Clus18@meta.data$labels)
table(Clus19@meta.data$labels)
table(Clus20@meta.data$labels)
table(Clus21@meta.data$labels)

Idents(Theca) <- "labels"
thelabels<-unique(Theca@active.ident)
for (i in 1:length(thelabels)){
  these.cells <- WhichCells(Theca, idents = thelabels[i])
  those.cells <- WhichCells(Theca, idents = thelabels[i],invert=TRUE)
  tiff(paste(thelabels[i],".FP.tiff",sep=""))
  p1<-DimPlot(Theca, label=F, cells.highlight= list(these.cells, those.cells), cols.highlight = c("red"), cols= "lightgrey",pt.size = 0.25,order=TRUE)+ NoLegend()
  print(p1)
  dev.off()
}

Idents(Theca) <- "seurat_clusters"
Theca.markers <- FindAllMarkers(Theca, min.pct = 0.25, logfc.threshold = 0.25, return.thresh = 0.001)
write.csv(Theca.markers, "Theca.markers.csv")

#Subset Theca Cells
Idents(Theca) <- "seurat_clusters"
ThecaStr <- subset(Theca, idents = c("1", "2", "3", "4", "5", "11", "18"))
ThecaStr <- FindVariableFeatures(object = ThecaStr)
ThecaStr <- RunPCA(object = ThecaStr)
ThecaStr <- FindNeighbors(object = ThecaStr)
ThecaStr <- FindClusters(object = ThecaStr)
ThecaStr <- RunUMAP(ThecaStr, dims = 1:50)
DimPlot(ThecaStr, reduction = "umap", group.by = "labels", pt.size = .05, label = TRUE)
DimPlot(ThecaStr, reduction = "umap", group.by = "labels", pt.size = .05, label = TRUE)+ NoLegend()
DimPlot(ThecaStr, reduction = "umap", group.by = "seurat_clusters", pt.size = .05, label = TRUE)+ NoLegend()
DimPlot(ThecaStr, reduction = "umap", group.by = "Phase", pt.size = .05, label = TRUE)+ NoLegend()

Idents(ThecaStr) <- "labels"
thelabels<-unique(ThecaStr@active.ident)
for (i in 1:length(thelabels)){
  these.cells <- WhichCells(ThecaStr, idents = thelabels[i])
  those.cells <- WhichCells(ThecaStr, idents = thelabels[i],invert=TRUE)
  tiff(paste(thelabels[i],".FP.tiff",sep=""))
  p1<-DimPlot(ThecaStr, label=F, cells.highlight= list(these.cells, those.cells), cols.highlight = c("red"), cols= "lightgrey",pt.size = 0.25,order=TRUE)+ NoLegend()
  print(p1)
  dev.off()
}

FeaturePlot(object = ThecaStr, features = "CYP17A1", reduction = "umap",cols = c("grey90","red"),order = TRUE,pt.size = 0.25)
FeaturePlot(object = ThecaStr, features = "OGN", reduction = "umap",cols = c("grey90","red"),order = TRUE,pt.size = 0.25)
FeaturePlot(object = ThecaStr, features = "ACTA2", reduction = "umap",cols = c("grey90","red"),order = TRUE,pt.size = 0.25)
FeaturePlot(object = ThecaStr, features = "CYP11A1", reduction = "umap",cols = c("grey90","red"),order = TRUE,pt.size = 0.25)
FeaturePlot(object = ThecaStr, features = "THBD", reduction = "umap",cols = c("grey90","red"),order = TRUE,pt.size = 0.25)
FeaturePlot(object = ThecaStr, features = "PDPN", reduction = "umap",cols = c("grey90","red"),order = TRUE,pt.size = 0.25)

Idents(ThecaStr) <- "seurat_clusters"
ThecaStr.markers <- FindAllMarkers(ThecaStr, min.pct = 0.25, logfc.threshold = 0.25, return.thresh = 0.001)
write.csv(ThecaStr.markers, "ThecaStr.markers.csv")

#Qualify GC populations
Idents(Theca) <- "seurat_clusters"
ThecaGC <- subset(Theca, idents = c("7"))
ThecaGC <- FindVariableFeatures(object = ThecaGC)
ThecaGC <- RunPCA(object = ThecaGC)
ThecaGC <- FindNeighbors(object = ThecaGC)
ThecaGC <- FindClusters(object = ThecaGC)
ThecaGC <- RunUMAP(ThecaGC, dims = 1:50)
DimPlot(ThecaGC, reduction = "umap", group.by = "labels", pt.size = .05, label = TRUE)
DimPlot(ThecaGC, reduction = "umap", group.by = "labels", pt.size = .05, label = TRUE)+ NoLegend()
DimPlot(ThecaGC, reduction = "umap", group.by = "seurat_clusters", pt.size = .05, label = TRUE)+ NoLegend()
DimPlot(ThecaGC, reduction = "umap", group.by = "Phase", pt.size = .05, label = TRUE)+ NoLegend()
Idents(ThecaGC) <- "labels"
DotPlot(object = ThecaGC, features = c("TAGLN", "TNFRSF12A", "FILIP1L", "GADD45A", "CEBPD", "KRT18", "CYR61", "CTGF", "IGFBP5", "CITED2", "SGK1", "SERTAD1", "FN1", "VCL", "STK17A", "PLEKHO1", "PDLIM1", "IER3", "METRNL", "ACTN1", "DUSP1", "KRT8", "KLF6", "FERMT2", "JUNB", "ETNK2", "PTTG1", "SLC4A2", "BIRC5", "MEX3C", "NR5A1", "TOP2A", "BUB1", "UBE2C", "CENPF", "ASPM", "NUSAP1", "VEGFA", "RHBG", "CKAP2", "HSD17B1", "AMH", "SCD", "ELK1", "CYP19A1", "IHH", "PLP1", "FST", "INHA", "LPL"), cols = c("lightgrey", "red"), scale.by = "size")

FeaturePlot(object = ThecaCult, features = "CYP17A1", reduction = "umap",cols = c("grey90","red"),order = TRUE,pt.size = 0.25)
VlnPlot(object = ThecaProp, features = "BGN", pt.size = 0, group.by = "seurat_clusters") +
  stat_summary(fun = median, geom='point', size = 25, colour = "black", shape = 95)+NoLegend()
